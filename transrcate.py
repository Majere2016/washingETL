#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on 2017/6/9 上午10:54@author: zhechengma"""from input import connectDatabaseimport pandas as pdfrom output_setting import *dcd=connectDatabase()df1=pd.DataFrame(dcd.select(c_base_info).head(1000))#去掉首段字段和尾端字段def drop_ununsecolunms(dataframe):	colunms_name=list(dataframe.keys())	del dataframe[colunms_name[0]],dataframe[colunms_name[1]],dataframe[colunms_name[-1]],dataframe[colunms_name[-2]]	return dataframe#去掉去掉空格，'-'和换行符号def drop_unusalbe_str(dataframe):	colunms_name=list(dataframe.keys())	d={}	for i in colunms_name:		b =[]		for j in dataframe[i]:			j=str(j).replace(' ','')			j=j.replace('-','')			j=j.strip()			b.append(j)		d[i] = b	# print(d)	# print(pd.DataFrame(d,columns = colunms_name))	dataframe_1=pd.DataFrame(d,columns = colunms_name)	return dataframe_1#将时间字段转换成标准字符def modfit_time(dataseries):	a=[]	for i in dataseries:		if len(i) ==8:			i=i[0:4]+'-'+i[4:6]+'-'+i[6:]		elif len(i) == 16:			i=i[0:4]+'-'+i[4:6]+'-'+i[6:8]+' '+i[8:]		else:			i='0000-00-00 00:00:00'		a.append(i)	dataseries=pd.Series(a)	return dataseries#转化公司状态def trans_state(dataseries):	a=[]	for i in dataseries :		if '存续' in i :			i = 1		elif '吊销' in i :			i = 3		elif '在业' in i :			i = 1		elif '注销' in i :			i = 2		else :			i = 1		a.append ( i )	dataseries = pd.Series ( a )	return dataseries#资金类型的分割和转化def add_capital(dataseries):	a = [ ]	b = [ ]	for i in dataseries:		cap_list = str ( i ).split ( '万' )		if len ( cap_list ) > 1 :			capital = cap_list [ 0 ]			types = cap_list [ 1 ]		a.append ( capital )		b.append ( types )	dataseries = pd.Series ( a )	dataseries_1 = pd.Series ( b )	d = [ ]	for i in dataseries_1 :		if '元' in i :			i = 1		elif '元人民币' in i :			i = 1		elif '人民币' in i :			i = 1		elif '美元' in i :			i = 2		elif '港币' in i :			i = 3		else :			i = 0		d.append ( i )	type_currency=pd.Series(d)	return dataseries,type_currency#数据去重def no_duplicate(dataframe):	df=dataframe.drop_dulicates()	return df